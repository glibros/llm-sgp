root ::= object ws01

value  ::= string ws

object ::=
  "{" ws (
    number ":" ws value
    ("," ws number ":" ws value)*
  )? "}"


string ::=
  "\"" (string-char)* "\""

string-char ::= [^"\\] | "\\" (["\\/bfnrt] | "u" [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F] [0-9a-fA-F]) # escapes

number ::= "\"" ("-"? ([0-9] | [1-9] [0-9]*)) ("." [0-9]+)? ([eE] [-+]? [0-9]+)? "\""
null ::= "null"

# Optional space: by convention, applied in this grammar after literal chars when allowed
ws ::= ([ \t\n] ws)?
ws01 ::= ([ \t\n])?